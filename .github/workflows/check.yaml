name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  skip:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Check for duplicate runs
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5

  runner:
    needs: skip
    if: ${{ needs.skip.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.runner.outputs.label }}
    steps:
      - name: Get runner
        id: runner
        run: |
          runners=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.PAT }}" "https://api.github.com/repos/${{ github.repository }}/actions/runners")
          available=$(echo "$runners" | jq '.runners[] | select(.status == "online" and .labels[] .name == "self-hosted")')
          if [ -n "$available" ]; then
            echo "label=self-hosted" >> $GITHUB_OUTPUT
          else
            echo "label=ubuntu-latest" >> $GITHUB_OUTPUT
          fi

  check:
    needs: runner
    runs-on: ${{ needs.runner.outputs.label }}
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - uses: nicknovitski/nix-develop@v1
        with:
          arguments: '.#ci'

      - run: nix flake check --accept-flake-config

      - uses: spotdemo4/setup-git-app-user@v2
        with:
          app-id: ${{ vars.CLIENT_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Fix hash mismatches
        if: ${{ failure() && github.event_name == 'pull_request' }}
        id: fix-hashes
        run: |
          git stash --include-untracked
          git fetch --depth=1 origin "$GITHUB_HEAD_REF"
          git checkout -B "$GITHUB_HEAD_REF" "${{ github.event.pull_request.head.sha }}"

          nix-update --flake --version=skip default

          if ! git diff --quiet; then
            git add --update --ignore-removal .

            email=$(git config user.email)
            name=$(git config user.name)
            echo "$email"
            echo "$name"
            git commit -m "fix(deps): update nix hash"
            git push origin "$GITHUB_HEAD_REF"
          fi

          git checkout -
          git stash pop || true
